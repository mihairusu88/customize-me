@use 'sass:color';
@use 'sass:math';

@mixin mobile {
    @media (max-width: 959px) {
        @content;
    }
}

@mixin set-colors($colors) {
    @each $color, $value in $colors {
        #{$color}: #{$value};
        #{$color}-h: #{to-fixed( hue( $value ) )};
        #{$color}-s: #{to-fixed( saturation( $value ) )};
        #{$color}-l: #{to-fixed( lightness( $value ) )};
    }
}

@mixin box-shadow($color) {
    box-shadow: 0 20px 20px rgba( $color, 0.08 ) !important;
}

@function get-hsl($color) {
    $color: str-replace( $color, 'var(' );
    $color: str-replace( $color, ')' );

    @return (h: var(#{$color + '-h'}), s: var(#{$color + '-s'}), l: var(#{$color + '-l'}));
}

@function str-replace($string, $search, $replace: '') {
    $index: str-index( $string, $search );

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace +
            str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

@function to-fixed($float) {
    $pow: 100;

    @return math.div(round($float * $pow), $pow);
}